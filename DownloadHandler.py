from pytube import YouTube
from mutagen.easyid3 import EasyID3

class TagHandler:
    # Tag Label Constants
    TITLE = ("Title", "TIT2")
    ARTIST = ("Artist", "TPE1")
    ALBUM_ARTIST = ("AlbumArtist", "TPE2")
    ALBUM = ("Album", "TALB")
    YEAR = ("Year", "TYER")

    @classmethod
    def retrieve_metadata(cls, video: YouTube) -> dict:
        """Attempts to scrape metadata from YouTube generated descriptions."""
        text = video.description
        metadata = {}
        if text is not None:
            lines = text.split('\n')
        else:
            lines = [""]

        # Checks if the description was generated by YouTube.
        if lines[-1] == "Auto-generated by YouTube.":
            print("Description was auto generated.")
        else:
            metadata[cls.TITLE[0]] = video.title
            """
            if metadata[self.TITLE[0]] is tuple:
                # I have no idea why this happens, but apparently I need this.
                # This video in particular - https://youtu.be/hsklsxReSe0
                metadata[self.TITLE[0]] = metadata[self.TITLE[0]][0]
            """
            metadata[cls.ARTIST[0]] = video.author
            return metadata

        title, artist = lines[2].split(' · ', 1)
        album = lines[4]
        year = ""

        # Finds the release year if it exists.
        for line in lines:
            if line.find('Released on: ') != -1:
                year = line.split(': ')[1].split('-', 1)[0]
                break

        # Make metadata dict.
        metadata[cls.TITLE[0]] = title
        metadata[cls.ARTIST[0]] = artist.replace(' · ', "; ")
        metadata[cls.ALBUM_ARTIST[0]] = artist.split(' · ')[0]
        metadata[cls.ALBUM[0]] = album
        if year != "":
            metadata[cls.YEAR[0]] = year

        print("Metadata: ", metadata)

        return metadata

    @classmethod
    def append_metadata(cls, file_path: str, metadata: dict):
        """
        Adds metadata to a mp3 file.
        :param file_path: Path of the mp3 file.
        :param metadata: The metadata to add.
        :return: None
        """
        # Docs: https://mutagen.readthedocs.io/en/latest/api/id3.html
        audio = EasyID3(file_path)

        # Register keys.
        audio.RegisterTextKey(cls.TITLE[0], cls.TITLE[1])
        audio.RegisterTextKey(cls.ARTIST[0], cls.ARTIST[1])
        audio.RegisterTextKey(cls.ALBUM_ARTIST[0], cls.ALBUM_ARTIST[1])
        audio.RegisterTextKey(cls.ALBUM[0], cls.ALBUM[1])
        audio.RegisterTextKey(cls.YEAR[0], cls.YEAR[1])

        # Append Metadata
        for key, value in metadata.items():
            audio[key] = value

        audio.save()